digraph {
  node [style="filled", color="#F3BB44", fontname="Roboto Mono"]
  edge [fontsize=10, color="#555555", fontname="Roboto Mono", fontcolor="#555555"]
  
  api_gateway_api [label="API Gateway\nAPI"]
  api_gateway_api -> ec2_instance [label="triggers\n(via internal\nHTTP endpoint)"]
  api_gateway_api -> elb [label="triggers"]
  api_gateway_api -> lambda_function [label="triggers"]
  api_gateway_api -> region [label="belongs to"]
  api_gateway_api -> s3_bucket [label="accesses"]
  api_gateway_api -> service [label="accesses"]

  availability_zone [label="Availability\nZone"]
  availability_zone -> region [label="belongs to"]

  cloudfront_distribution [label="CloudFront\nDistribution"]
  cloudfront_distribution -> api_gateway_api [label="accesses (if\nedge-optimized)"]
  cloudfront_distribution -> ec2_instance [label="accesses (via\npublic IP)"]
  cloudfront_distribution -> elb [label="accesses (via\npublic IP)"]
  cloudfront_distribution -> s3_bucket [label="accesses\n(internally)"]

  cloudwatch_events_rule [label="CloudWatch\nEvents Rule"]
  cloudwatch_events_rule -> lambda_function [label="triggers (when\nscheduled ⏰)"]
  cloudwatch_events_rule -> region [label="belongs to"]

  compute_instance [label = "\"Compute\nInstance\""]
  compute_instance -> ec2_instance [label="triggers (via\ninternal IP)"]
  compute_instance -> internet [label="accesses"]
  compute_instance -> lambda_function [label="triggers"]
  compute_instance -> service [label="accesses"]
  compute_instance -> sns_topic [label="accesses"]
  compute_instance -> sqs_queue [label="accesses"]

  ec2_instance [label="EC2\nInstance"]
  ec2_instance -> compute_instance [label="is a"]
  ec2_instance -> ec2_security_group [label="has"]
  ec2_instance -> vpc_subnet [label="belongs to"]

  ec2_security_group [label="EC2\nSecurity Group"]
  ec2_security_group -> vpc [label="belongs to"]

  elb [label="ELB"]
  elb -> ec2_instance [label="triggers (via\ninternal IP)"]
  elb -> ec2_security_group [label="has"]
  elb -> vpc [label="belongs to"]

  iam_group [label="IAM\nGroup"]
  iam_group -> iam_policy [label="has"]

  iam_policy [label="IAM\nPolicy"]
  iam_policy -> service [label="defines\naccess to"]

  iam_role [label="IAM\nRole"]
  iam_role -> iam_policy [label="has"]

  iam_user [label="IAM\nUser"]
  iam_user -> iam_group [label="belongs to"]
  iam_user -> iam_policy [label="has"]

  internet [label="️️Internet\n☁️", color="#aaddff", style="filled"]
  internet -> api_gateway_api [label="triggers"]
  internet -> cloudfront_distribution [label="accesses"]
  internet -> ec2_instance [label="triggers (via\npublic or\nElastic IP)"]
  internet -> elb [label="triggers"]
  internet -> route_53_zone [label="triggers"]
  internet -> s3_bucket [label="accesses"]

  lambda_function [label="Lambda\nFunction"]
  lambda_function -> compute_instance [label="is a"]
  lambda_function -> region [label="belongs to"]

  region [label="Region"]

  route_53_zone [label="Route 53\nZone"]
  route_53_zone -> cloudfront_distribution [label="refers to"]
  route_53_zone -> ec2_instance [label="refers to"]
  route_53_zone -> elb [label="refers to"]
  route_53_zone -> s3_bucket [label="refers to"]

  s3_bucket [label="S3\nBucket"]
  s3_bucket -> lambda_function [label="triggers"]
  s3_bucket -> region [label="belongs to"]

  service [label="\"Service\"\n(not linking to\nthe actual services\nfor clarity sake)"]

  sns_topic [label="SNS\nTopic"]
  sns_topic -> lambda_function [label="triggers"]
  sns_topic -> region [label="belongs to"]
  sns_topic -> sqs_queue [label="pushes to"]

  sqs_queue [label="SQS\nQueue"]
  sqs_queue -> region [label="belongs to"]

  vpc [label="VPC"]
  vpc -> internet [label="exposed to\n(optional)"]
  vpc -> region [label="belongs to"]

  vpc_subnet [label="VPC\nSubnet"]
  vpc_subnet -> availability_zone [label="belongs to"]
  vpc_subnet -> vpc [label="belongs to"]
}